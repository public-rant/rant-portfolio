---
// TODO use astro params for collection to load
// TODO there should be a related content widget that gets the content described in spec.
// And moreover, since the content will mainly be prompts, the structure informs the related content
// no need for special elements, the element described the content. DL for example.
// You could promote headers until it is #1 for production.
import { getEntry, getCollection } from "astro:content";
const { slug } = Astro.params;
const { title } = Astro.props
if (slug === undefined) {
  throw new Error("Slug is required");
}
const entry = await getEntry("drafts", slug);
if (entry === undefined) {
  return Astro.redirect("/404");
}

import Layout from '../components/Layout.astro'
const { Content } = await entry.render();

const collection = await getCollection('drafts')
import OrderedList from '../components/OrderedList.astro';
import Para from '../components/Para.astro';
import Image from '../components/Image.astro';
import Header from '../components/Header.astro';
import SubHeader from '../components/SubHeader.astro';
const components = {ol: OrderedList,p:Para, h2: Header, h3: SubHeader, img: Image}
---

<Layout title={title}>
		<ul slot="navigation">
      {collection && collection.map(post => <li class="text-sm"><a href={post.slug}>{post.data.title}</a></li>)}
		</ul>
    <Content slot="content" components={components} />
</Layout>